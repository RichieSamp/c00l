--// Optimized Low Server Finder Script

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId

-- Settings
local minimumPlayers = 1 -- Avoids empty servers if set above 0
local maxRetries = 5
local cursor = ""

local function getServerList()
    local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s"):format(
        PlaceId, cursor ~= "" and "&cursor=" .. cursor or ""
    )
    local success, response = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)
    return success and response or nil
end

local function findLowServer()
    for attempt = 1, maxRetries do
        local data = getServerList()
        if not data then continue end

        for _, server in ipairs(data.data) do
            if server.playing >= minimumPlayers and server.playing < server.maxPlayers then
                return server.id
            end
        end

        if data.nextPageCursor then
            cursor = data.nextPageCursor
        else
            break
        end
    end
    return nil
end

local serverId = findLowServer()
if serverId then
    TeleportService:TeleportToPlaceInstance(PlaceId, serverId, LocalPlayer)
else
    warn("No suitable low-population server found.")
end


