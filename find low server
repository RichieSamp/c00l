-- Roblox Low Server Hopper (1 Player Only)
-- Works in Synapse X, KRNL, or any executor with rconsole + HTTP + Teleport
-- Created by Harpy ðŸ¦…

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId

-- Console setup
rconsoleclear()
rconsolename("ðŸ¦… Harpy Solo Server Finder")

rconsoleprint("@@LIGHT_BLUE@@[INFO] Harpy Activated! Searching for 1-player server...\n")

local function findOnePlayerServer()
    local cursor = ""
    local targetServerId = nil

    while true do
        local url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100%s", PlaceId, cursor ~= "" and "&cursor=" .. cursor or "")
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)

        if success and result and result.data then
            for _, server in ipairs(result.data) do
                if server.playing == 1 and server.id ~= game.JobId then
                    targetServerId = server.id
                    rconsoleprint("@@GREEN@@[FOUND] 1-player server found!\n")
                    rconsoleprint("[INFO] Server ID: " .. targetServerId .. "\n")
                    return targetServerId
                end
            end

            if result.nextPageCursor then
                cursor = result.nextPageCursor
            else
                break
            end
        else
            rconsoleprint("@@RED@@[ERROR] Failed to fetch server list.\n")
            break
        end
    end

    return nil
end

local function hopToOnePlayerServer()
    local serverId = findOnePlayerServer()
    if serverId then
        wait(2)
        rconsoleprint("@@YELLOW@@[INFO] Teleporting to solo server...\n")
        TeleportService:TeleportToPlaceInstance(PlaceId, serverId, LocalPlayer)
    else
        rconsoleprint("@@RED@@[FAIL] No server with exactly 1 player found.\n")
    end
end

-- Start it
hopToOnePlayerServer()

