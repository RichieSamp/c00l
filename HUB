local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Learzy Hub | Tha Bronx 3",
   Icon = 0,
   LoadingTitle = "Learzy Hub",
   LoadingSubtitle = "by Learzy",
   ShowText = "Rayfield",
   Theme = "Default",
   ToggleUIKeybind = "K",

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },

   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

-- === Tab ===
local PlayerTab = Window:CreateTab("Player", 4483362458)

-- === Services ===
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local camera = workspace.CurrentCamera
local localPlayer = players.LocalPlayer

-- === ESP Configuration ===
local espEnabled = false
local teamCheck = false

local boxColor = Color3.fromRGB(255, 0, 0)
local textColor = Color3.fromRGB(255, 255, 255)
local healthBarColor = Color3.fromRGB(0, 255, 0)
local toolColor = Color3.fromRGB(0, 170, 255)

local espObjects = {}

-- === Utility ===
local function createDrawing(class, props)
    local obj = Drawing.new(class)
    for prop, val in pairs(props) do
        obj[prop] = val
    end
    return obj
end

local function cleanupESP()
    for player, items in pairs(espObjects) do
        if not player or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            for _, drawing in pairs(items) do
                if drawing.Remove then
                    drawing:Remove()
                end
            end
            espObjects[player] = nil
        end
    end
end

-- === ESP Loop ===
runService.RenderStepped:Connect(function()
    if not espEnabled then
        for _, items in pairs(espObjects) do
            for _, drawing in pairs(items) do
                drawing.Visible = false
            end
        end
        return
    end

    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if teamCheck and player.Team == localPlayer.Team then
                if espObjects[player] then
                    for _, drawing in pairs(espObjects[player]) do
                        drawing.Visible = false
                    end
                end
                continue
            end

            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            local head = player.Character:FindFirstChild("Head")
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if not hrp or not head or not humanoid then continue end

            local screenPos, onScreen = camera:WorldToViewportPoint(hrp.Position)
            if not onScreen then
                if espObjects[player] then
                    for _, drawing in pairs(espObjects[player]) do
                        drawing.Visible = false
                    end
                end
                continue
            end

            local distance = (camera.CFrame.Position - hrp.Position).Magnitude
            local scale = 1 / distance * 100
            local boxWidth = 35 * scale
            local boxHeight = 55 * scale
            local boxPos = Vector2.new(screenPos.X - boxWidth / 2, screenPos.Y - boxHeight / 2)

            if not espObjects[player] then
                espObjects[player] = {
                    Box = createDrawing("Square", {Thickness = 1, Transparency = 1, Color = boxColor, Filled = false}),
                    Name = createDrawing("Text", {Size = 13, Color = textColor, Center = true, Outline = true, Font = 2}),
                    Health = createDrawing("Line", {Thickness = 2, Transparency = 1, Color = healthBarColor}),
                    Tool = createDrawing("Text", {Size = 12, Color = toolColor, Center = true, Outline = true, Font = 2})
                }
            end

            local esp = espObjects[player]

            -- Box
            esp.Box.Position = boxPos
            esp.Box.Size = Vector2.new(boxWidth, boxHeight)
            esp.Box.Visible = true

            -- Name above head
            local headPos = camera:WorldToViewportPoint(head.Position + Vector3.new(0, 1.5, 0))
            esp.Name.Text = player.Name
            esp.Name.Position = Vector2.new(headPos.X, headPos.Y)
            esp.Name.Visible = true

            -- Health Bar
            local hp = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
            local barHeight = boxHeight * hp
            esp.Health.From = Vector2.new(boxPos.X - 4, boxPos.Y + boxHeight)
            esp.Health.To = Vector2.new(boxPos.X - 4, boxPos.Y + boxHeight - barHeight)
            esp.Health.Visible = true

            -- Tool ESP
            local toolName = ""
            for _, item in ipairs(player.Character:GetChildren()) do
                if item:IsA("Tool") then
                    toolName = item.Name
                    break
                end
            end
            local toolPos = camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 3, 0))
            esp.Tool.Text = toolName
            esp.Tool.Position = Vector2.new(toolPos.X, toolPos.Y)
            esp.Tool.Visible = (toolName ~= "")
        end
    end

    cleanupESP()
end)

-- === Rayfield Controls ===
PlayerTab:CreateToggle({
    Name = "ESP Enabled",
    CurrentValue = false,
    Flag = "ESP_Toggle",
    Callback = function(state)
        espEnabled = state
    end
})

PlayerTab:CreateToggle({
    Name = "Team Check",
    CurrentValue = false,
    Flag = "ESP_TeamCheck",
    Callback = function(state)
        teamCheck = state
    end
})
