--// === Service Initialization ===
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Request = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request)
local Executor = identifyexecutor and identifyexecutor() or "Unknown"

--// === UI Initialization ===
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local MainUI = Rayfield:CreateWindow({
    Name = "Learzy Hub | " .. Executor,
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
})

--// === UI Tabs ===
local tabPlayer = MainUI:CreateTab("Player", 4483362458)
local tabVisual = MainUI:CreateTab("Visual", 4483362458)
local tabCombat = MainUI:CreateTab("Combat", 4483362458)
local tabVehicle = MainUI:CreateTab("Vehicle", 4483362458)

tabPlayer:CreateParagraph({Title = "Player", Content = "Movement tools available below"})
tabVisual:CreateParagraph({Title = "Visual", Content = "ESP options below"})

--// === Fly (Noclip + Hover) ===
local Fly_Enabled = false
local Fly_Speed = 60
local BodyGyro, BodyVelocity, FlyConnection
local character, humanoidRootPart

local function EnableNoclip()
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end

local function StartFly()
    character = LocalPlayer.Character
    if not character then return end
    humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    EnableNoclip()

    BodyGyro = Instance.new("BodyGyro")
    BodyGyro.P = 9e4
    BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    BodyGyro.CFrame = humanoidRootPart.CFrame
    BodyGyro.Parent = humanoidRootPart

    BodyVelocity = Instance.new("BodyVelocity")
    BodyVelocity.Velocity = Vector3.zero
    BodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    BodyVelocity.Parent = humanoidRootPart

    FlyConnection = RunService.RenderStepped:Connect(function()
        if not Fly_Enabled then return end
        local moveVec = Vector3.zero
        local camCF = Camera.CFrame

        if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveVec += camCF.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveVec -= camCF.LookVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveVec -= camCF.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveVec += camCF.RightVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveVec += camCF.UpVector end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveVec -= camCF.UpVector end

        BodyVelocity.Velocity = moveVec.Magnitude > 0 and moveVec.Unit * Fly_Speed or Vector3.zero
        BodyGyro.CFrame = camCF

        EnableNoclip()
    end)
end

local function StopFly()
    Fly_Enabled = false
    if FlyConnection then FlyConnection:Disconnect() end
    if BodyGyro then BodyGyro:Destroy() end
    if BodyVelocity then BodyVelocity:Destroy() end
end

tabPlayer:CreateToggle({
    Name = "Fly",
    CurrentValue = false,
    Callback = function(state)
        Fly_Enabled = state
        if state then StartFly() else StopFly() end
    end
})

tabPlayer:CreateSlider({
    Name = "Fly Speed",
    Range = {16, 200},
    Increment = 1,
    Suffix = " studs/s",
    CurrentValue = Fly_Speed,
    Callback = function(value) Fly_Speed = value end
})

--// === Username ESP (Stroke Tipis) ===
local UsernameESP_Enabled = false
local function RemoveUsernameESP(player)
    if player.Character and player.Character:FindFirstChild("UsernameESP") then
        player.Character:FindFirstChild("UsernameESP"):Destroy()
    end
end

local function AddUsernameESP(player)
    if player == LocalPlayer then return end
    local function Apply(character)
        if not UsernameESP_Enabled then return end
        local head = character:FindFirstChild("Head")
        if head and not character:FindFirstChild("UsernameESP") then
            local gui = Instance.new("BillboardGui")
            gui.Name = "UsernameESP"
            gui.Adornee = head
            gui.AlwaysOnTop = true
            gui.Size = UDim2.new(0, 100, 0, 20)
            gui.StudsOffset = Vector3.new(0, 3, 0)
            gui.Parent = character

            local label = Instance.new("TextLabel")
            label.Text = player.Name
            label.Font = Enum.Font.SourceSans
            label.TextColor3 = Color3.new(1, 1, 1)
            label.BackgroundTransparency = 1
            label.TextScaled = true
            label.Size = UDim2.new(1, 0, 1, 0)
            label.Parent = gui

            local stroke = Instance.new("UIStroke")
            stroke.Thickness = 0.75
            stroke.Color = Color3.new(0, 0, 0)
            stroke.Parent = label
        end
    end
    player.CharacterAdded:Connect(function(char)
        char:WaitForChild("Head", 5)
        task.wait(0.2)
        Apply(char)
    end)
    if player.Character then Apply(player.Character) end
end

local function ToggleUsernameESP(state)
    UsernameESP_Enabled = state
    for _, p in ipairs(Players:GetPlayers()) do
        if state then AddUsernameESP(p) else RemoveUsernameESP(p) end
    end
end

Players.PlayerAdded:Connect(function(p)
    if UsernameESP_Enabled then AddUsernameESP(p) end
end)

tabVisual:CreateToggle({
    Name = "Username ESP",
    CurrentValue = false,
    Callback = ToggleUsernameESP,
})

--// === 2D Box ESP ===
local BoxESP_Enabled = false
local BoxDrawings = {}

local function RemoveBoxESP(player)
    if BoxDrawings[player] then
        BoxDrawings[player]:Remove()
        BoxDrawings[player] = nil
    end
end

local function CreateBoxESP(player)
    if player == LocalPlayer or BoxDrawings[player] then return end
    local box = Drawing.new("Square")
    box.Thickness = 1
    box.Color = Color3.new(1, 1, 1)
    box.Transparency = 1
    box.Filled = false
    box.Visible = false
    BoxDrawings[player] = box
end

local function UpdateBoxESP()
    for player, box in pairs(BoxDrawings) do
        local char = player.Character
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if not hrp or not hum or hum.Health <= 0 then
            box.Visible = false
            continue
        end

        local min, max
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                local pos = part.Position
                min = min and min:Min(pos) or pos
                max = max and max:Max(pos) or pos
            end
        end

        if not min or not max then box.Visible = false continue end

        local tl, vis1 = Camera:WorldToViewportPoint(Vector3.new(min.X, max.Y, min.Z))
        local br, vis2 = Camera:WorldToViewportPoint(Vector3.new(max.X, min.Y, max.Z))

        if vis1 and vis2 then
            box.Position = Vector2.new(tl.X, tl.Y)
            box.Size = Vector2.new(br.X - tl.X, br.Y - tl.Y)
            box.Visible = BoxESP_Enabled
        else
            box.Visible = false
        end
    end
end

Players.PlayerAdded:Connect(CreateBoxESP)
Players.PlayerRemoving:Connect(RemoveBoxESP)
for _, p in ipairs(Players:GetPlayers()) do
    if p ~= LocalPlayer then CreateBoxESP(p) end
end

RunService.RenderStepped:Connect(function()
    if BoxESP_Enabled then UpdateBoxESP() end
end)

tabVisual:CreateToggle({
    Name = "Box ESP",
    CurrentValue = false,
    Callback = function(state)
        BoxESP_Enabled = state
        if not state then
            for _, box in pairs(BoxDrawings) do box.Visible = false end
        end
    end
})
